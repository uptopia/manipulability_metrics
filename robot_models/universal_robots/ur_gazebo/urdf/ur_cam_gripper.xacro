<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg robot_model)_robot">
  <!--
    This is a top-level xacro instantiating the Gazebo-specific version of the
    'ur_robot' macro (ie: 'ur_robot_gazebo') and passing it values for all its
    required arguments.

    This file should be considered the Gazebo-specific variant of the file
    with the same name in the ur_description package. It accepts the same
    arguments, but instead of configuring everything for a real robot, will
    generate a Gazebo-compatible URDF with a ros_control hardware_interface
    attached to it.

    Only use this top-level xacro if you plan on spawning the robot in Gazebo
    'by itself', without any gripper or any other geometry attached.

    If you need to attach an end-effector, camera or need to integrate the
    robot into a larger workcell and want to spawn that as a single entity in
    Gazebo, DO NOT EDIT THIS FILE.

    Instead: create a new top-level xacro, give it a proper name, include the
    required '.xacro' files, instantiate the models (ie: call the macros) and
    connect everything by adding the appropriate joints.
  -->

  <!--
    Import main macro.

    NOTE: this imports the Gazebo-wrapper main macro, NOT the regular
          xacro macro (which is hosted by ur_description).
  -->
  <xacro:property name="M_PI" value="3.1415926535897931" />

  <!--Robot UR5e-->
  <xacro:include filename="$(find ur_gazebo)/urdf/ur_cam_macro.xacro"/>
  <!-- <xacro:include filename="$(find ur_gazebo)/urdf/ur_macro.xacro"/> -->

  <!--Declare arguments -->
   <xacro:arg name="joint_limit_params" default=""/>
   <xacro:arg name="kinematics_params" default=""/>
   <xacro:arg name="physical_params" default=""/>
   <xacro:arg name="visual_params" default=""/>
   <!-- legal values:
         - hardware_interface/PositionJointInterface
         - hardware_interface/VelocityJointInterface
         - hardware_interface/EffortJointInterface
    NOTE: this value must correspond to the controller configured in the
          controller .yaml files in the 'config' directory.
  --> 
   <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
   <xacro:arg name="safety_limits" default="false"/>
   <xacro:arg name="safety_pos_margin" default="0.15"/>
   <xacro:arg name="safety_k_position" default="20"/>

   <!-- Instantiate the Gazebo robot and pass it all the required arguments. -->
   <xacro:ur_robot_gazebo
     prefix=""
     joint_limits_parameters_file="$(arg joint_limit_params)"
     kinematics_parameters_file="$(arg kinematics_params)"
     physical_parameters_file="$(arg physical_params)"
     visual_parameters_file="$(arg visual_params)"
     transmission_hw_interface="$(arg transmission_hw_interface)"
     safety_limits="$(arg safety_limits)"
     safety_pos_margin="$(arg safety_pos_margin)"
     safety_k_position="$(arg safety_k_position)"
     />

  <!--
    Attach the Gazebo model to Gazebo's world frame.

    Note: if you're looking to integrate a UR into a larger scene and need
    to add EEFs or other parts, DO NOT change this file or the 'world' link
    here. Create a NEW xacro instead and decide whether you need to add
    a 'world' link there.
  -->
  <link name="world"/>
  <joint name="world_joint" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <!-- <link name="tool0_controller"/>
  <joint name="tool_controller_fake_joint" type="fixed">
    <parent link="tool0"/>
    <child link="tool0_controller"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint> -->

  <!--PU Belt-->
  <xacro:include filename="$(find belt12mm_description)/urdf/belt12mm.xacro"/>
  <xacro:belt12mm parent="base_link" prefix="belt12mm_">
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
  </xacro:belt12mm>
  <joint name="belt12mm_joint" type="fixed">
          <parent link="base_link"/>
          <child link="belt12mm_base_link"/>
          <origin xyz="0.5 0.0 0" rpy="1.57 0 1.57"/>
  </joint>

  <!-- <xacro:include filename="$(find robotiq_2f_85_gripper_visualization)/urdf/robotiq_arg2f_85_model_macro.xacro" />
  <xacro:robotiq_arg2f_85 prefix=""/>

  <joint name="flange_gripper_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 1.5707963268 0" />
    <parent link="flange"/>
    <child link="robotiq_arg2f_base_link"/>
  </joint> -->
  
  <!--Connect Camera Link-->
  <xacro:include filename="$(find d405_link)/urdf/d405_link.urdf.xacro" />
  <xacro:connect_d405_link parent="flange">
    <origin xyz="0.001 0 0" rpy="0 ${-M_PI/2} 0" />
  </xacro:connect_d405_link>

  <!--Camera D405-->
  <xacro:arg name="name"                    default="camera"/>
  <xacro:arg name="topics_ns"               default="camera"/>
  <xacro:arg name="use_nominal_extrinsics"  default="true"/>
  <xacro:arg name="visualize_color"         default="true"/>
  <xacro:arg name="align_depth"             default="true"/>
  <xacro:arg name="enable_pointCloud"       default="true"/>
  <xacro:include filename="$(find realsense2_description)/urdf/_d405.urdf.xacro" />

  <xacro:sensor_d405 parent="connect_d405_base_link" 
                     name="$(arg name)"
                     topics_ns="$(arg topics_ns)"
                     use_nominal_extrinsics="$(arg use_nominal_extrinsics)"
                     visualize_color="$(arg visualize_color)"
                     align_depth="$(arg align_depth)"
                     enable_pointCloud="$(arg enable_pointCloud)">
    <origin xyz="-0.075 0 0.015" rpy="0 ${-M_PI*1.35} 0"/>
  </xacro:sensor_d405>

  <!--Gripper Robotiq-2F85-->
  <xacro:include filename="$(find robotiq_2f_85_gripper_visualization)/urdf/robotiq_arg2f_85_model_macro.xacro" />
  <xacro:robotiq_arg2f_85 prefix=""/>

  <joint name="ur5e_gripper_link" type="fixed">
    <origin xyz="0 0 -0.01" rpy="0 ${M_PI} 0" />
    <parent link="connect_d405_base_link"/>
    <child link="robotiq_arg2f_base_link"/>
  </joint>
</robot>
